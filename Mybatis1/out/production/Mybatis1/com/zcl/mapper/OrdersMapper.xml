<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zcl.mapper.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.zcl.po.Orders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, number, createtime, note
  </sql>
  <select id="selectByExample" parameterType="com.zcl.po.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zcl.po.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zcl.po.Orders">
    insert into orders (id, user_id, number, 
      createtime, note)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zcl.po.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zcl.po.OrdersExample" resultType="java.lang.Integer">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      number = #{record.number,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zcl.po.Orders">
    update orders
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zcl.po.Orders">
    update orders
    set user_id = #{userId,jdbcType=INTEGER},
      number = #{number,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findOrderAndUserCustom" resultType="com.zcl.po.OrderAndUserCustom">
    SELECT o.*,u.username,u.address
    from USER u,Orders o
    WHERE u.id = o.user_id
  </select>

  <resultMap id="userorderMap" type="com.zcl.po.Orders">
    <id property="id" column="id" />
    <result property="userId" column="user_id" />
    <result property="number" column="number" />
    <result property="createtime" column="createtime" />

    <association property="user" javaType="com.zcl.po.User">
      <id property="id" column="user_id" />
      <result property="username" column="username"/>
      <result property="birthday" column="birthday" />
      <result property="sex" column="sex" />
      <result property="address" column="address"/>
    </association>

  </resultMap>

  <select id="findOrderListResultMap" resultMap="userorderMap">
    SELECT o.*,username,address,detail.id detail_id,detail.items_id detail_items_id,detail.items_num detail_items_num
    from USER u,Orders o,Orderdetail detail
    WHERE u.id = o.user_id and detail.orders_id = o.id
  </select>

  <select id="findOrdersDetailList" resultMap="userorderdetailmap">
    SELECT
    orders.*,
    user.username,
    user.address,
    orderdetail.id orderdetail_id,
    orderdetail.items_id,
    orderdetail.items_num
    FROM orders,user,orderdetail
    WHERE orders.user_id = user.id
    AND orders.id = orderdetail.orders_id
  </select>

  <!-- 订单信息resultmap -->
  <resultMap type="com.zcl.po.Orders" id="userorderdetailmap">
    <id property="id" column="id"/>
    <result property="userId" column="user_id"/>
    <result property="number" column="number"/>
    <association property="user" javaType="com.zcl.po.User">
      <id property="id" column="user_id"/>
      <result property="username" column="username"/>
      <result property="address" column="address"/>
    </association>
    <collection property="orderdetails" ofType="com.zcl.po.Orderdetail">
      <id property="id" column="id" />
      <id property="ordersId" column="orderdetail_id"/>
      <result property="itemsId" column="items_id"/>
      <result property="itemsNum" column="items_num"/>
    </collection>
  </resultMap>

  <select id="findOrderItems" resultMap="userOrderListResultMap">
        SELECT
        orders.id oid,
        USER .id uId,
        USER .username,
        USER .address,
        orderdetail.id orderdetail_id,
        orderdetail.orders_id ordertailOrdersId,
        orderdetail.items_id,
        orderdetail.items_num,
        items.name items_name,
        items.detail items_detail
    FROM
        orders,
        USER,
        orderdetail,
        items
    WHERE
        orders.user_id = USER .id
    AND orders.id = orderdetail.orders_id
    AND orderdetail.items_id = items.id

  </select>

  <resultMap id="userOrderListResultMap" type="com.zcl.po.User">
    <id property="id" column="id" />
    <result property="username" column="username" />
    <result property="address" column="address" />

    <collection property="orders" ofType="com.zcl.po.Orders">
      <id property="id" column="oid" />
      <result property="userId" column="uId" />
      <result property="number" column="number" />
      <result property="createtime" column="createtime" />

      <collection property="orderdetails" ofType="com.zcl.po.Orderdetail">
        <id property="id" column="orderdetail_id" />
        <result property="ordersId" column="ordertailOrdersId" />
        <result property="itemsId" column="items_id" />
        <result property="itemsNum" column="items_num" />

        <association property="items" javaType="com.zcl.po.Items">
          <id property="id" column="items_id" />
          <result property="name" column="items_name" />
          <result property="detail" column="items_detail" />
        </association>
      </collection>

    </collection>
  </resultMap>

  <!--懒加载-->
  <select id="findOrdersList" resultMap="ordersMap" >
    select * from orders
  </select>

  <resultMap id="ordersMap" type="com.zcl.po.Orders">
    <id property="id" column="id" />
    <result property="userId" column="user_id" />
    <result property="number" column="number" />

    <association property="user" javaType="com.zcl.po.User" select="selectByPrimaryKey" column="user_id" />
  </resultMap>

</mapper>